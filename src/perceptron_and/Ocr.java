package perceptron_and;

import java.util.ArrayList;

/**
 *
 * @author Iulisloi Zacarias
 */
public class Ocr {

    ArrayList<Net> rnaLetras;

    public Ocr(int numberOfCharacters, int bitsPerSymbol) {
        for (int i = 0; i < numberOfCharacters; i++) {
            rnaLetras = new ArrayList<Net>(bitsPerSymbol);
        }
        // trainRNA(rnaLetras);
        // testRNA(rnaLetras);
    }

    private void trainOcr() {
        int[][] entradasA = {
            {
                -1, -1, 1, 1, -1, -1, -1,
                -1, -1, -1, 1, -1, -1, -1,
                -1, -1, -1, 1, -1, -1, -1,
                -1, -1, 1, -1, 1, -1, -1,
                -1, -1, 1, -1, 1, -1, -1,
                -1, 1, 1, 1, 1, 1, -1,
                -1, 1, -1, -1, -1, 1, -1,
                -1, 1, -1, -1, -1, 1, -1,
                1, 1, 1, -1, 1, 1, 1
            }, {
                -1, -1, -1, 1, -1, -1, -1,
                -1, -1, -1, 1, -1, -1, -1,
                -1, -1, -1, 1, -1, -1, -1,
                -1, -1, 1, -1, 1, -1, -1,
                -1, -1, 1, -1, 1, -1, -1,
                -1, 1, -1, -1, -1, 1, -1,
                -1, 1, 1, 1, 1, 1, -1,
                -1, 1, -1, -1, -1, 1, -1,
                -1, 1, -1, -1, -1, 1, -1
            }, {
                -1, -1, -1, 1, -1, -1, -1,
                -1, -1, -1, 1, -1, -1, -1,
                -1, -1, 1, -1, 1, -1, -1,
                -1, -1, 1, -1, 1, -1, -1,
                -1, 1, -1, -1, -1, 1, -1,
                -1, 1, 1, 1, 1, 1, -1,
                1, -1, -1, -1, -1, -1, 1,
                1, -1, -1, -1, -1, -1, 1,
                1, 1, -1, -1, -1, 1, 1
            }
        };
        int[][] entradasB = {
            {
                1, 1, 1, 1, 1, 1, -1,
                -1, 1, -1, -1, -1, -1, 1,
                -1, 1, -1, -1, -1, -1, 1,
                -1, 1, -1, -1, -1, -1, 1,
                -1, 1, 1, 1, 1, 1, -1,
                -1, 1, -1, -1, -1, -1, 1,
                -1, 1, -1, -1, -1, -1, 1,
                -1, 1, -1, -1, -1, -1, 1,
                1, 1, 1, 1, 1, 1, -1
            }, {
                1, 1, 1, 1, 1, 1, -1,
                1, -1, -1, -1, -1, -1, 1,
                1, -1, -1, -1, -1, -1, 1,
                1, -1, -1, -1, -1, -1, 1,
                1, 1, 1, 1, 1, 1, -1,
                1, -1, -1, -1, -1, -1, 1,
                1, -1, -1, -1, -1, -1, 1,
                1, -1, -1, -1, -1, -1, 1,
                1, 1, 1, 1, 1, 1, -1
            }, {
                1, 1, 1, 1, 1, 1, -1,
                -1, 1, -1, -1, -1, -1, 1,
                -1, 1, -1, -1, -1, -1, 1,
                -1, 1, 1, 1, 1, 1, -1,
                -1, 1, -1, -1, -1, -1, 1,
                -1, 1, -1, -1, -1, -1, 1,
                -1, 1, -1, -1, -1, -1, 1,
                -1, 1, -1, -1, -1, -1, 1,
                1, 1, 1, 1, 1, 1, -1
            }
        };
        int[][] entradasC = {
            {
                -1, -1, 1, 1, 1, 1, 1,
                -1, 1, -1, -1, -1, -1, 1,
                1, -1, -1, -1, -1, -1, -1,
                1, -1, -1, -1, -1, -1, -1,
                1, -1, -1, -1, -1, -1, -1,
                1, -1, -1, -1, -1, -1, -1,
                1, -1, -1, -1, -1, -1, -1,
                -1, 1, -1, -1, -1, -1, 1,
                -1, -1, 1, 1, 1, 1, -1
            }, {
                -1, -1, 1, 1, 1, -1, -1,
                -1, 1, -1, -1, -1, 1, -1,
                1, -1, -1, -1, -1, -1, 1,
                1, -1, -1, -1, -1, -1, -1,
                1, -1, -1, -1, -1, -1, -1,
                1, -1, -1, -1, -1, -1, -1,
                1, -1, -1, -1, -1, -1, 1,
                -1, 1, -1, -1, -1, 1, -1,
                -1, -1, 1, 1, 1, -1, -1
            }, {
                -1, -1, 1, 1, 1, -1, 1,
                -1, 1, -1, -1, -1, 1, 1,
                1, -1, -1, -1, -1, -1, 1,
                1, -1, -1, -1, -1, -1, -1,
                1, -1, -1, -1, -1, -1, -1,
                1, -1, -1, -1, -1, -1, -1,
                1, -1, -1, -1, -1, -1, 1,
                -1, 1, -1, -1, -1, 1, -1,
                -1, -1, 1, 1, 1, -1, -1
            }
        };

        SampleSet setA = new SampleSet();
        for (int i = 0; i < 10; i++) {
            
        }

        //    for (int i = 0;
                //    i< entradasA.length ;
                //    i
                //
                //    
                //        ++) {
                //            setA.addSample(entradasA[i], saidasA[i]);
                //    }
                //
                //    rnaLetras.train (setAnd);
                //    public getSymbol(int[] inputVector){
                //        
                //    }
            
        }
    }
